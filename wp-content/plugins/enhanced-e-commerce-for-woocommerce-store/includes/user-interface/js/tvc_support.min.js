function tvc_activateFeedCategoryMapping(d) {
    var c = jQuery("#feed-selector-" + d);
    var b = c.attr("data-children") ? JSON.parse(c.attr("data-children")) : [];
    c.prop("checked", true);
    tvc_activateFeedCategorySelector(d);
    for (var a = 0; a < b.length; a++) {
        tvc_activateFeedCategorySelector(b[a])
    }
}

function tvc_activateFeedCategorySelection(d) {
    var c = jQuery("#feed-selector-" + d);
    var b = c.attr("data-children") ? JSON.parse(c.attr("data-children")) : [];
    c.prop("checked", true);
    _feedHolder.activateCategory(d, true);
    for (var a = 0; a < b.length; a++) {
        tvc_activateFeedCategorySelection(b[a])
    }
}

function tvc_activateAllFeedCategoryMapping() {
    var b = 0 !== document.getElementsByClassName("tvc-category-mapping-selector").length ? "category_mapping_table" : "category_selection_table";
    var c = "category_mapping_table" === b ? document.getElementsByClassName("tvc-category-mapping-selector") : document.getElementsByClassName("tvc-category-selector");
    for (var a = 0; a < c.length; a++) {
        if ("category_mapping_table" === b) {
            tvc_activateFeedCategorySelector(c[a].value)
        } else {
            tvc_activateFeedCategorySelection(c[a].value)
        }
    }
}

function tvc_activateFeedCategorySelector(g) {
    var a = tvc_channelUsesOwnCategories(_feedHolder.channel);
    var b = a ? "shopCategory" : "default";
    var f = jQuery("#feed-selector-" + g);
    var e = jQuery("#feed-category-" + g);
    _feedHolder.activateCategory(g, a);
    var d = f.attr("data-children") ? JSON.parse(f.attr("data-children")) : [];
    if (e.html() === "") {
        e.html(tvc_mapToDefaultCategoryElement(g, b))
    }
    f.prop("checked", true);
    for (var c = 0; c < d.length; c++) {
        tvc_activateFeedCategorySelector(d[c])
    }
}

function tvc_deactivateFeedCategorySelection(d) {
    var c = jQuery("#feed-selector-" + d);
    var b = c.attr("data-children") ? JSON.parse(c.attr("data-children")) : [];
    c.prop("checked", false);
    _feedHolder.deactivateCategory(d);
    for (var a = 0; a < b.length; a++) {
        tvc_deactivateFeedCategorySelection(b[a])
    }
}

function tvc_deactivateFeedCategoryMapping(d) {
    var c = jQuery("#feed-selector-" + d);
    tvc_deactivateFeedCategorySelector(d, true);
    var b = c.attr("data-children") ? JSON.parse(c.attr("data-children")) : [];
    for (var a = 0; a < b.length; a++) {
        tvc_deactivateFeedCategorySelector(b[a], false)
    }
}

function tvc_deactivateAllFeedCategoryMapping() {
    var b = 0 !== document.getElementsByClassName("tvc-category-mapping-selector").length ? document.getElementsByClassName("tvc-category-mapping-selector") : document.getElementsByClassName("tvc-category-selector");
    for (var a = 0; a < b.length; a++) {
        tvc_deactivateFeedCategorySelector(b[a].value)
    }
}

function tvc_contains_special_characters(b) {
    var a = "%^#<>{}[]/~`@?:;=&";
    for (var c = 0; c < a.length; c++) {
        if (b.indexOf(a[c]) > -1) {
            return true
        }
    }
    return false
}

function tvc_feedFileNameExists(a) {
    console.log(a);
    return false
}

function tvc_deactivateFeedCategorySelector(e, c) {
    var d = jQuery("#feed-selector-" + e);
    _feedHolder.deactivateCategory(e);
    jQuery("#feed-category-" + e).html("");
    jQuery("#category-selector-catmap-" + e).hide();
    d.prop("checked", false);
    if (!c) {
        var b = d.attr("data-children") ? JSON.parse(d.attr("data-children")) : [];
        for (var a = 0; a < b.length; a++) {
            tvc_deactivateFeedCategorySelector(b[a], false)
        }
    }
}

function tvc_hideSubs(c) {
    var e = c.match(/(\d+)$/)[0];
    var a = c.substring(0, c.length - e.length);
    for (var b = 7; b > e; b--) {
        var d = jQuery("#" + a + b);
        d.css("display", "none");
        d.empty()
    }
}

function tvc_escapeHtml(a) {
    a = a || "";
    a = a.replace(/&([^#])(?![a-z1-4]{1,8};)/gi, "&#038;$1");
    return a.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
}

function tvc_splitCombinedFieldElements(e) {
    if (!e) {
        return []
    }
    var d = /\|[0-9]/;
    var a = [];
    var b = 0;
    var c;
    while ((c = d.exec(e)) !== null) {
        var f = c.index;
        a.push(e.substring(b, f));
        e = e.slice(f + 1)
    }
    a.push(e);
    return a
}

function tvc_showFeedSpinner() {
    jQuery("#feed-spinner").show();
    jQuery("body").css("cursor", "wait")
}

function tvc_hideFeedSpinner() {
    jQuery("#feed-spinner").hide();
    jQuery("body").css("cursor", "default")
}

function tvc_enableFeedActionButtons() {
    jQuery("[name=generate-top]").prop("disabled", false);
    jQuery("[name=generate-bottom]").prop("disabled", false);
    jQuery("[name=save-top]").prop("disabled", false);
    jQuery("[name=save-bottom]").prop("disabled", false);
    jQuery( '[name=new]' ).prop( 'disabled', false );
    jQuery( '[name=view-top]' ).prop( 'disabled', false );
    if ("" !== jQuery("#tvc-feed-url").text()) {
        tvc_enableViewFeedButtons()
    }
}

function disableFeedActionButtons() {
    jQuery("[name=generate-top]").prop("disabled", true);
    jQuery("[name=generate-bottom]").prop("disabled", true);
    jQuery("[name=save-top]").prop("disabled", true);
    jQuery("[name=save-bottom]").prop("disabled", true);
    jQuery( '[name=new]' ).prop( 'disabled', true );
    tvc_disableViewFeedButtons()
}

function tvc_enableViewFeedButtons() {
    jQuery("[name=view-top]").prop("disabled", false);
    jQuery("[name=view-bottom]").prop("disabled", false);
    jQuery( '[name=new]' ).prop( 'disabled', false );
}

function tvc_disableViewFeedButtons() {
    jQuery("[name=view-top]").prop("disabled", true);
    jQuery("[name=view-bottom]").prop("disabled", true);
    jQuery( '[name=new]' ).prop( 'disabled', true );
}

function tvc_show_error_message(b) {
    var a = jQuery("#error-message");
    a.empty();
    a.append("<p>" + b + "</p>");
    a.show()
}

function tvc_show_success_message(b) {
    var a = jQuery("#success-message");
    a.empty();
    a.append("<p>" + b + "</p>");
    a.show()
};