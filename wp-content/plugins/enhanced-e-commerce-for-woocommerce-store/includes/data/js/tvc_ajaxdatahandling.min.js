var myAjaxNonces;

function tvc_getFeedList(a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-list-of-feeds",
        postFeedsListNonce: myAjaxNonces.postFeedsListNonce
    }, function (b) {
        a(tvc_validateResponse(b))
    })
}

function tvc_getBackupsList(a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-list-of-backups",
        postBackupListNonce: myAjaxNonces.postBackupListNonce
    }, function (b) {
        a(tvc_validateResponse(b))
    })
}

function tvc_getSettingsOptions(a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-settings-options",
        postSetupOptionsNonce: myAjaxNonces.postSetupOptionsNonce
    }, function (b) {
        a(tvc_validateResponse(b))
    })
}

function tvc_getOutputFields(a, b, c) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-output-fields",
        feedId: a,
        channelId: b,
        outputFieldsNonce: myAjaxNonces.outputFieldsNonce
    }, function (d) {
        c(tvc_validateResponse(d))
    })
}

function tvc_getSourceFields(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-input-fields",
        sourceId: a,
        inputFieldsNonce: myAjaxNonces.inputFieldsNonce
    }, function (c) {
        b(tvc_validateResponse(c))
    })
}

function tvc_getMainFeedFilters(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-main-feed-filters",
        feedId: a,
        inputFeedFiltersNonce: myAjaxNonces.inputFeedFiltersNonce
    }, function (c) {
        b(tvc_validateResponse(c))
    })
}

function tvc_getNextCategories(c, b, a, e, d) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-next-categories",
        channelId: c,
        requestedLevel: b,
        parentCategory: a,
        fileLanguage: e,
        nextCategoryNonce: myAjaxNonces.nextCategoryNonce
    }, function (f) {
        f = f.trim();
        if (f.substr(f.length - 1) === "0") {
            f = f.substring(0, f.length - 1)
        }
        d(tvc_validateResponse(f))
    })
}

function tvc_getCategoryListsFromString(b, a, d, c) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-category-lists",
        channelId: b,
        mainCategories: a,
        fileLanguage: d,
        categoryListsNonce: myAjaxNonces.categoryListsNonce
    }, function (e) {
        c(tvc_validateResponse(e))
    })
}

function tvc_updateFeedToDb(b, a, c, d) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-update-feed-data",
        feed: JSON.stringify(b),
        feedFilter: c ? c[0]["meta_value"] : "",
        metaData: JSON.stringify(a),
        updateFeedDataNonce: myAjaxNonces.updateFeedDataNonce
    }, function (e) {
        d(tvc_validateResponse(e))
    })
}

function tvc_updateFeedFile(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-update-feed-file",
        dataType: "text",
        feedId: a,
        updateFeedFileNonce: myAjaxNonces.updateFeedFileNonce
    }, function (c) {
        b(tvc_validateResponse(c))
    })
}

function tvc_getCurrentFeedStatus(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-feed-status",
        sourceId: a,
        feedStatusNonce: myAjaxNonces.feedStatusNonce
    }, function (c) {
        b(tvc_validateResponse(c))
    })
}

function tvc_getFeedData(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-feed-data",
        sourceId: a,
        feedDataNonce: myAjaxNonces.feedDataNonce
    }, function (c) {
        b(tvc_validateResponse(c))
    })
}

function tvc_switchFeedStatus(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-switch-feed-status",
        feedId: a,
        switchFeedStatusNonce: myAjaxNonces.switchFeedStatusNonce
    }, function (c) {
        tvc_switchStatusAction(a, c);
        b(tvc_validateResponse(c))
    })
}

function tvc_duplicateExistingFeed(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-duplicate-existing-feed",
        feedId: a,
        duplicateFeedNonce: myAjaxNonces.duplicateFeedNonce
    }, function (c) {
        if (c.trim()) {
            tvc_resetFeedList()
        }
        b(tvc_validateResponse(c))
    })
}

function tvc_logMessageOnServer(a, c, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-log-message",
        messageList: a,
        fileName: c,
        logMessageNonce: myAjaxNonces.logMessageNonce
    }, function (d) {
        b(d.trim())
    })
}

function tvc_auto_feed_fix_mode(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-auto-feed-fix-mode-selection",
        fix_selection: a,
        updateAutoFeedFixNonce: myAjaxNonces.setAutoFeedFixNonce
    }, function (c) {
        b(c.trim())
    })
}

function tvc_background_processing_mode(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-background-processing-mode-selection",
        mode_selection: a,
        backgroundModeNonce: myAjaxNonces.setBackgroundModeNonce
    }, function (c) {
        b(c.trim())
    })
}

function tvc_feed_logger_status(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-feed-logger-status-selection",
        statusSelection: a,
        feedLoggerStatusNonce: myAjaxNonces.setFeedLoggerStatusNonce
    }, function (c) {
        b(c.trim())
    })
}

function tvc_show_pi_status(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-show-product-identifiers-selection",
        showPiSelection: a,
        showPINonce: myAjaxNonces.setShowPINonce
    }, function (c) {
        b(c.trim())
    })
}

function tvc_change_third_party_attribute_keywords(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-third-party-attribute-keywords",
        keywords: a,
        thirdPartyKeywordsNonce: myAjaxNonces.setThirdPartyKeywordsNonce
    }, function (c) {
        b(c.trim())
    })
}

function tvc_change_notice_mailaddress(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-set-notice-mailaddress",
        mailaddress: a,
        noticeMailaddressNonce: myAjaxNonces.setNoticeMailaddressNonce
    }, function (c) {
        b(c.trim())
    })
}

function tvc_change_background_processing_time_limit(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-background-processing-time-limit",
        limit: a,
        batchProcessingLimitNonce: myAjaxNonces.setBatchProcessingLimitNonce
    }, function (c) {
        b(c.trim())
    })
}

function tvc_clear_feed_process_data(a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-clear-feed-process-data",
        clearFeedNonce: myAjaxNonces.setClearFeedProcessNonce
    }, function (b) {
        a(b)
    })
}

function tvc_reinitiate_plugin(a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-reinitiate-plugin",
        reInitiateNonce: myAjaxNonces.setReInitiateNonce
    }, function (b) {
        a(b)
    })
}

function tvc_validateResponse(a) {
    a = a.trim();
    if (a.indexOf("<div id='error'>") < 0 && a.indexOf("<b>Fatal error</b>") < 0 && a.indexOf("<b>Notice</b>") < 0 && a.indexOf("<b>Warning</b>") < 0 && a.indexOf("<b>Catchable fatal error</b>") < 0 && a.indexOf('<div id="error">') < 0) {
        if (a.indexOf("[]") < 0) {
            if (a !== "") {
                return (a)
            } else {
                return ("1")
            }
        } else {
            return ("0")
        }
    } else {
        tvc_show_error_message(a.replace("[]", ""));
        tvc_hideFeedSpinner();
        tvc_logMessageOnServer(a, "error", function (b) {
            return ("0")
        })
    }
}

function tvc_deleteFeed(d, b) {
    var a = jQuery("#feed-spinner");
    var c = jQuery("#feed-list-message");
    c.empty();
    tvc_removeFeedFile(function () {
        a.show();
        tvc_deleteFeedFromDb(d, function (e) {
            a.show();
            e = e.trim();
            if (e === "1") {
                tvc_resetFeedList();
                a.hide()
            } else {
                c.append(e);
                a.hide()
            }
        }, d)
    }, b)
}

function tvc_removeFeedFile(b, a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-delete-feed-file",
        fileTitle: a,
        deleteFeedNonce: myAjaxNonces.deleteFeedNonce
    }, function (c) {
        b(tvc_validateResponse(c))
    })
}

function tvc_deleteFeedFromDb(a, b) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-delete-feed",
        feedId: a,
        deleteFeedNonce: myAjaxNonces.deleteFeedNonce
    }, function (c) {
        b(tvc_validateResponse(c))
    })
}

function tvc_checkNextFeedInQueue(a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-get-next-feed-in-queue",
        nextFeedInQueueNonce: myAjaxNonces.nextFeedInQueueNonce
    }, function (b) {
        a(tvc_validateResponse(b))
    })
}

function tvc_initiateBackup(b, a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-backup-current-data",
        fileName: b,
        backupNonce: myAjaxNonces.backupNonce
    }, function (c) {
        a(tvc_validateResponse(c))
    })
}

function tvc_deleteBackup(b, a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-delete-backup-file",
        fileName: b,
        deleteBackupNonce: myAjaxNonces.deleteBackupNonce
    }, function (c) {
        a(tvc_validateResponse(c))
    })
}

function tvc_restoreBackup(b, a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-restore-backup-file",
        fileName: b,
        restoreBackupNonce: myAjaxNonces.restoreBackupNonce
    }, function (c) {
        a(tvc_validateResponse(c))
    })
}

function tvc_duplicateBackup(b, a) {
    jQuery.post(myAjaxNonces.ajaxurl, {
        action: "tvcajax-duplicate-backup-file",
        fileName: b,
        duplicateBackupNonce: myAjaxNonces.duplicateBackupNonce
    }, function (c) {
        a(tvc_validateResponse(c))
    })
};