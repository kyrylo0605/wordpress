var _feedHolder;

function tvc_editCategories() {
    var d = jQuery("#category-selector-lvl");
    if (!tvc_isCustomChannel(_feedHolder.channel)) {
        var e = _feedHolder.mainCategory.split(" > ");
        var c = e.length;
        var a = jQuery("#lvl_" + (c)).html() !== "" ? c + 1 : c;
        jQuery("#selected-categories").hide();
        jQuery("#lvl_0").prop("disabled", false);
        for (var b = 0; b < a; b++) {
            var f = jQuery("#lvl_" + b);
            if (!e[b]) {
                f.val("0")
            }
            f.show()
        }
    } else {
        d.html(tvc_freeCategoryInputCntrl("default", _feedHolder.feedId, _feedHolder.mainCategory));
        d.prop("disabled", false)
    }
}

function tvc_generateFeed() {
    if (jQuery("#file-name").val() !== "") {
        if (_feedHolder.categoryMapping && _feedHolder.categoryMapping.length > 0) {
            disableFeedActionButtons();
            tvc_generateAndSaveFeed();
        } else {
            var a = confirm(tvc_feed_settings_form_vars.no_category_selected);
            if (a === true) {
                disableFeedActionButtons();
                tvc_generateAndSaveFeed();
            }
        }

    } else {
        jQuery("#alert-message").html("<p>" + tvc_feed_settings_form_vars.file_name_required + "</p>");
        jQuery("#success-message").show()
    }
}

function tvc_saveFeedData() {
    if (jQuery("#file-name").val() !== "") {
        tvc_saveFeed()
    } else {
        jQuery("#alert-message").html("<p>" + tvc_feed_settings_form_vars.file_name_required + "</p>");
        jQuery("#success-message").show()
    }
}

function getCombinedValue(g, f) {
    var h = 1;
    var b = "";
    var d = _feedHolder.getCombinedOutputValue(g, f);
    while (jQuery("#combined-input-field-cntrl-" + g + "-" + f + "-" + h).val()) {
        var a = g + "-" + f + "-" + h;
        var e = jQuery("#combined-input-field-cntrl-" + a).val();
        b += h > 1 ? jQuery("#combined-separator-cntrl-" + a).val() + "#" : "";
        if (e !== "static") {
            b += e !== "select" ? e + "|" : ""
        } else {
            if (jQuery("#static-input-field-" + a).val()) {
                b += e + "#" + jQuery("#static-input-field-" + a).val() + "|"
            } else {
                b = d + "|";
                break
            }
        }
        h++
    }
    b = b.substring(0, b.length - 1);
    return h > 1 ? b : false
}

function tvc_staticValueChanged(c, b, a) {
    if (a > 0) {
        tvc_changedCombinedOutput(c, b, a)
    } else {
        tvc_setStaticValue(c, b, a);
        if (c === 34) {
            tvc_setIdentifierExistsDependancies()
        }
    }
}

function tvc_changedOutputSelection(b) {
    var a = jQuery("#output-field-cntrl-" + b);
    if (a.val() !== "no-value") {
        tvc_activateOptionalFieldRow(b, a.val())
    }
}

function tvc_hasExtraSourceRow(a, b) {
    if (b.length > 0) {
        return b[a - 1].hasOwnProperty("c")
    } else {
        return false
    }
}

function tvc_changedCustomOutputTitle() {
    var a = jQuery("#custom-output-title-input").val();
    if (a) {
        tvc_activateCustomFieldRow(a)
    }
}

function tvc_deleteSpecificFeed(c, b) {
    var a = confirm(tvc_feed_list_form_vars.confirm_delete_feed.replace("%feedname%", b));
    if (a === true) {
        tvc_deleteFeed(c, b);
        console.log("File " + b + " removed from server.");
        tvc_show_success_message(tvc_feed_list_form_vars.feed_removed.replace("%feedname%", b))
        parent.location='admin.php?page=tvc-product-feed-manager&tab=feed-list';
    }
}

function tvc_alertRemoveChannel() {
    var a = confirm(tvc_manage_channels_vars.confirm_removing_channel);
    if (true !== a) {
        return false
    }
}

function tvc_valueOptionChanged(d, c, e) {
    var b = jQuery("#value-options-" + d + "-" + c + "-" + e).val();
    var a = tvc_getCorrectValueSelector(d, c, 0, b, "", "");
    jQuery("#value-editor-input-span-" + d + "-" + c + "-" + e).html(a)
}

function tvc_getCorrectValueSelector(f, e, g, c, d, a) {
    var b = "";
    switch (c) {
        case"0":
        case"change nothing":
            tvc_valueInputOptionsChanged(f, e, g);
            b = "";
            break;
        case"1":
        case"overwrite":
            b = tvc_valueOptionsSingleInput(f, e, g, d);
            break;
        case"2":
        case"replace":
            b = tvc_valueOptionsReplaceInput(f, e, g, d, a);
            break;
        case"3":
        case"remove":
        case"4":
        case"add prefix":
        case"5":
        case"add suffix":
            b = tvc_valueOptionsSingleInputValue(f, e, g, d);
            break;
        case"6":
        case"recalculate":
            b = tvc_valueOptionsRecalculate(f, e, g, d, a);
            break;
        case"7":
        case"convert to child-element":
            b = tvc_valueOptionsElementInput(f, e, g, d);
            break;
        default:
            b = tvc_valueOptionsSingleInput(f, e, g, d);
            break
    }
    return b
}

function tvc_deactivateFeed(a) {
    tvc_switchFeedStatus(a, function (b) {
        tvc_updateFeedRowStatus(a, parseInt(b))
    })
}

function tvc_duplicateFeed(b, a) {
    tvc_duplicateExistingFeed(b, function (c) {
        if (c) {
            tvc_show_success_message(tvc_feed_list_form_vars.added_feed_copy.replace("%feedname%", a))
        }
    })
}

function tvc_regenerateFeed(a) {
    var b = tvcQueueStringIsEmpty() ? 3 : 4;
    tvcAddToQueueString(a);
    tvc_showFeedSpinner();
    tvc_updateFeedRowStatus(a, b);
    console.log("Started regenerating feed " + a);
    tvc_updateFeedFile(a, function (d) {
        tvc_hideFeedSpinner();
        console.log(d);
        var c = setInterval(function () {
            tvc_getCurrentFeedStatus(a, function (f) {
                var e = JSON.parse(f);
                if ("3" !== e.status_id && "4" !== e.status_id) {
                    console.log(e);
                    tvc_resetFeedStatus(e);
                    tvc_resetFeedList();
                    clearInterval(c);
                    tvcRemoveFromQueueString(a)
                }
            })
        }, 10000)
    })
}

function tvc_viewFeed(a) {
    if (-1 !== a.indexOf("http")) {
        window.open(a)
    } else {
        alert(tvc_feed_list_form_vars.feed_not_generated)
    }
}

function tvc_addRowValueEditor(c, b, d, a) {
    jQuery("#end-row-id-" + c).remove();
    jQuery("#row-" + c).append(tvc_valueEditor(c, b, d, a) + tvc_endrow(c));
    jQuery("#value-editor-input-query-add-span-" + c + "-" + b + "-" + d).remove()
}

function tvc_convertToCamelCase(b) {
    var a = b[0].toLowerCase();
    for (var c = 1; c < b.length; c++) {
        a += b[c].charAt(0).toUpperCase() + b[c].slice(1)
    }
    return a
}

function tvc_addValueEditorQuery(c, b, a) {
    if (tvc_changeValueIsFilled(c, b, a)) {
        if (tvc_queryIsFilled(c, (b - 1), 1)) {
            tvc_showEditValueQuery(c, b, a, true)
        } else {
            alert(tvc_feed_settings_form_vars.query_requirements)
        }
    } else {
        alert(tvc_feed_settings_form_vars.first_fill_in_change_value)
    }
}

function tvc_queryStringToQueryObject(c) {
    var b = {};
    if (c) {
        for (var a in c) {
            b = tvc_convertQueryStringToQueryObject(c[a])
        }
    }
    return b
}

function tvc_valueStringToValueObject(b) {
    var a = {};
    if (b) {
        for (var c in b) {
            if (c !== "q") {
                a = tvc_convertValueStringToValueObject(b[c])
            }
        }
    }
    return a
}

function tvc_convertQueryStringToQueryObject(c) {
    var b = {};
    var a = c.split("#");
    if (a[0] === "1" || a[0] === "2") {
        b.preCondition = a[0]
    } else {
        b.preCondition = "0"
    }
    b.source = a[1];
    b.condition = a[2];
    b.value = a[3] ? a[3] : "";
    b.endValue = a[5] ? a[5] : "";
    return b
}

function tvc_resortObject(b) {
    var a = [];
    var e = 1;
    for (var d in b) {
        var f = {};
        for (var c in b[d]) {
            if (c !== "q") {
                f[e] = b[d][c];
                a.push(f)
            } else {
                a[e - 1].q = b[d][c]
            }
        }
        e++
    }
    return e > 1 ? a : ""
}

function tvc_convertValueStringToValueObject(b) {
    var a = {};
    var c = b.split("#");
    a.preCondition = c[0];
    a.condition = c[1];
    a.value = c[2];
    a.endValue = c[3] ? c[3] : "";
    return a
}

function tvc_makeCleanQueryObject() {
    var a = {};
    a.preCondition = "if";
    a.source = "select";
    a.condition = "";
    a.value = "";
    a.endValue = "";
    return a
}

function tvc_makeCleanValueObject() {
    var a = {};
    a.preCondition = "change";
    a.condition = "overwrite";
    a.value = "";
    a.endValue = "";
    return a
}

function tvc_addNewItemToCategoryString(h, a, f, e) {
    var b = a.split(e).length;
    if (a === tvc_feed_settings_form_vars.map_to_default_category || h === "0") {
        return f
    } else {
        if (b <= h) {
            return a + e + f
        } else {
            var g = 0;
            for (var c = 0; c < h; c++) {
                g = a.indexOf(e, g + 1);
                var d = a.substring(0, g)
            }
            return d + e + f
        }
    }
};